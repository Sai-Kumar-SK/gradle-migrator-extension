name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Compile TypeScript
      run: npm run compile

    - name: Run tests
      run: npm test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.node-version }}
        path: |
          test-results.xml
          coverage/

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Compile TypeScript
      run: npm run compile

    - name: Install VSCE
      run: npm install -g @vscode/vsce

    - name: Package extension
      run: vsce package --no-git-tag-version

    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: vsix-package
        path: '*.vsix'

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerabilities
      run: npx audit-ci --moderate
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting with report
      run: |
        npm run lint -- --format=json --output-file=eslint-report.json
        npm run lint
      continue-on-error: true

    - name: Upload ESLint report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: eslint-report
        path: eslint-report.json

  compatibility:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        vscode-version: ['1.74.0', '1.80.0', 'latest']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Update VS Code engine version
      run: |
        if [ "${{ matrix.vscode-version }}" != "latest" ]; then
          sed -i 's/"vscode": ".*"/"vscode": "^${{ matrix.vscode-version }}"/g' package.json
        fi

    - name: Compile TypeScript
      run: npm run compile

    - name: Install VSCE
      run: npm install -g @vscode/vsce

    - name: Package extension
      run: vsce package --no-git-tag-version
      continue-on-error: true